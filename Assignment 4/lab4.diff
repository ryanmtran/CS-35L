2020-02-04  Ryan Minh Tran  <minh@lnxsrv06.seas.ucla.edu>

        * timespecEdit.h (timespec_cmp):
        In order to reduce the chance of overflow, attributed to integer
        operations between extremely large positive or extremely small
        negative numbers, I replaced the previous conditional statements
        with a set of three conditional statements, that evaluate the size
        of a.tv_sec and b.tv_sec in relation with each other. If a.tv is
        less than b.tv, the difference would be negative, so I returned
        -1. If a.tv_sec > b.tv_sec, the difference would be positive, so
        I returned 1. In all other cases, a.tv=b.tv, so I would return 0.

--- lib/timespec.h	2005-09-21 23:05:39.000000000 -0700
+++ lib/timespec.h	2020-02-04 21:04:29.672399000 -0800
@@ -45,8 +45,15 @@
 static inline int
 timespec_cmp (struct timespec a, struct timespec b)
 {
-  int diff = a.tv_sec - b.tv_sec;
-  return diff ? diff : a.tv_nsec - b.tv_nsec;
+  if (a.tv_sec < b.tv_sec) {
+    return -1;
+  }
+  else if (a.tv_sec > b.tv_sec) {
+    return 1;
+  }
+  else {
+    return 0;
+  }
 }
 
 # if ! HAVE_DECL_NANOSLEEP
